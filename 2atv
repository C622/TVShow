#!/usr/bin/env bash
#ffmpeg -i Top.Gear.The.Perfect.Road.Trip.2013.720p.WEB-DL.DD5.1.H.264.mkv -vcodec copy -acodec aac -ac 2 -strict experimental -ab 160k -async 1 -f mp4 Top.Gear_The.Perfect.Road.Trip.213.720p.mp4


## Fuction 'usage', displays usage information
usage()
{
cat << EOF
usage: $0 options

This script converts a given movie file, using ffmpeg to a mp4 file that is compatibel with Apple TV.

Output file is stored in the current users Movie folder.

OPTIONS:
   -h      Show this message
   -i      Input file name
   -l      Only show information about streams in the Input file
   -s      Select Audio stream number (Remember that it is one down comparied to the stream list)
   -g      Gen PTS (When converting from .avi)

EOF
}

information()
{
echo "Info about Video and Audio Streams:"
echo "==================================="

ffmpeg -i "$oldfilename" 2>&1 | egrep 'Video:|Audio:' | sed 's/  //g'
}

oldfilename=
streamnumber=0
MYtype=
genpts=n

while getopts “hlgi:s:” OPTION
do
     case $OPTION in
         h)
             usage
             exit 0
             ;;
         i)
	     	oldfilename=$OPTARG
             ;;
         l)
             MYtype=l
             ;;
	     s)
	     	streamnumber=$OPTARG
             ;;
         g)
             genpts=y
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

newfilename=${oldfilename##*/}
newfilename=${newfilename%.*}.mp4

if [[ -z $oldfilename ]]
	then 
	usage
	exit 1
fi

if [[ $MYtype == l ]]
	then
	information
	exit 0
fi

if [[ $genpts == y ]]
	then
	ffmpeg -y -fflags +genpts -i "$oldfilename" -vcodec copy -acodec aac -ac 2 -map 0:v:0 -map 0:a:"$streamnumber" -strict experimental -ab 160k -async 1 -f mp4 ~/Movies/"$newfilename"
	exit 0
fi

ffmpeg -y -i "$oldfilename" -vcodec copy -acodec aac -ac 2 -map 0:v:0 -map 0:a:"$streamnumber" -strict experimental -ab 160k -async 1 -f mp4 ~/Movies/"$newfilename"
